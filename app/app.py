# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FyRZMdap5crne-09q-ZJXVsmMLF--Mh7
"""

from google.colab import drive
drive.mount('/content/drive')

import joblib
model_A = joblib.load("/content/drive/MyDrive/Model_A_Balanced_NB.pkl")
model_B = joblib.load("/content/drive/MyDrive/Model_B_Imbalanced_LR.pkl")

import pandas as pd





!pip install streamlit

# Commented out IPython magic to ensure Python compatibility.
%%writefile app.py
import streamlit as st
import joblib
import pandas as pd
# 
# Load the models
# model_A = joblib.load("/content/drive/MyDrive/Model_A_Balanced_NB.pkl")
# model_B = joblib.load("/content/drive/MyDrive/Model_B_Imbalanced_LR.pkl")

model_A = joblib.load("models/Model_A_Balanced_NB.pkl")
model_B = joblib.load("models/Model_B_Imbalanced_LR.pkl")

# Function to get prediction
def predict_score(text, model):
    data = {'Text': [text], 'Summary': ['']}  # maintain same structure as training
    input_df = pd.DataFrame(data)
    prediction = model.predict(input_df)
    return prediction[0]

# Streamlit app title
st.title("Review Score Prediction (Model A vs Model B)")

# Text input for review
review_text = st.text_area("Enter a review text:")

# Prediction button
if st.button("Predict"):
    if review_text.strip():
        # Get predictions from both models
        prediction_A = predict_score(review_text, model_A)
        prediction_B = predict_score(review_text, model_B)

        # Display predictions side by side
        col1, col2 = st.columns(2)

        with col1:
            st.subheader("Model A (Balanced - Naive Bayes)")
            st.success(f"Predicted Score: **{prediction_A}**")

        with col2:
            st.subheader("Model B (Imbalanced - Logistic Regression)")
            st.info(f"Predicted Score: **{prediction_B}**")
    else:
        st.warning("Please enter some review text.")
#


